plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("io.objectbox")
    id("dagger.hilt.android.plugin")
    id("org.jetbrains.kotlin.plugin.serialization")
}

android {
    compileSdk 33
    defaultConfig {
        applicationId "org.breezyweather"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 40005
        versionName "4.0.5-alpha"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk true
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            crunchPngs false // No need to do that, we already optimized them
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').canRead()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }
    buildTypes.each {
        it.buildConfigField "String", "ACCU_WEATHER_BASE_URL", "\"${properties.getProperty("breezy.accu.baseUrl") ?: "https://api.accuweather.com/"}\""
        it.buildConfigField "String", "ACCU_WEATHER_KEY", "\"${properties.getProperty("breezy.accu.key") ?: ""}\""
        it.buildConfigField "String", "BAIDU_IP_LOCATION_AK", "\"${properties.getProperty("breezy.baiduip.key") ?: ""}\""
        it.buildConfigField "String", "BAIDU_IP_LOCATION_BASE_URL", "\"${properties.getProperty("breezy.baiduip.baseUrl") ?: "https://api.map.baidu.com/"}\""
        it.buildConfigField "String", "CHINA_WEATHER_BASE_URL", "\"${properties.getProperty("breezy.china.baseUrl") ?: "https://weatherapi.market.xiaomi.com/wtr-v3/"}\""
        it.buildConfigField "String", "IQA_ATMO_AURA_KEY", "\"${properties.getProperty("breezy.atmoaura.key") ?: ""}\""
        it.buildConfigField "String", "IQA_ATMO_AURA_URL", "\"${properties.getProperty("breezy.atmoaura.baseUrl") ?: "https://api.atmo-aura.fr/"}\""
        it.buildConfigField "String", "METNO_BASE_URL", "\"${properties.getProperty("breezy.metno.baseUrl") ?: "https://api.met.no/weatherapi/"}\""
        it.buildConfigField "String", "MF_WSFT_BASE_URL", "\"${properties.getProperty("breezy.mf.baseUrl") ?: "https://webservice.meteofrance.com/"}\""
        it.buildConfigField "String", "MF_WSFT_JWT_KEY", "\"${properties.getProperty("breezy.mf.jwtKey") ?: ""}\""
        it.buildConfigField "String", "MF_WSFT_KEY", "\"${properties.getProperty("breezy.mf.key") ?: ""}\""
        it.buildConfigField "String", "OPEN_METEO_AIR_QUALITY_BASE_URL", "\"${properties.getProperty("breezy.openmeteo.airQualityBaseUrl") ?: "https://air-quality-api.open-meteo.com/"}\""
        it.buildConfigField "String", "OPEN_METEO_GEOCODING_BASE_URL", "\"${properties.getProperty("breezy.openmeteo.geocodingBaseUrl") ?: "https://geocoding-api.open-meteo.com/"}\""
        it.buildConfigField "String", "OPEN_METEO_WEATHER_BASE_URL", "\"${properties.getProperty("breezy.openmeteo.weatherBaseUrl") ?: "https://api.open-meteo.com/"}\""
        it.buildConfigField "String", "OPEN_WEATHER_BASE_URL", "\"${properties.getProperty("breezy.openweather.baseUrl") ?: "https://api.openweathermap.org/"}\""
        it.buildConfigField "String", "OPEN_WEATHER_KEY", "\"${properties.getProperty("breezy.openweather.key") ?: ""}\""
        it.buildConfigField "String", "OPEN_WEATHER_ONE_CALL_VERSION", "\"${properties.getProperty("breezy.openweather.oneCallVersion") ?: "3.0"}\""
    }
    sourceSets {
        pub {
            java.srcDirs = ["src/src_bugly", "src/src_baidu", "src/src_amap", "src/src_gplay"]
            manifest.srcFile "manifest_pub/AndroidManifest.xml"
            jniLibs.srcDir "libs"
        }
        gplay {
            java.srcDirs = ["src/src_nobugly", "src/src_nobaidu", "src/src_noamap", "src/src_nogplay"]
            manifest.srcFile "manifest_gplay/AndroidManifest.xml"
        }
        fdroid {
            java.srcDirs = ["src/src_nobugly", "src/src_nobaidu", "src/src_noamap", "src/src_nogplay"]
        }
        test {
            java.srcDir "test"
        }
        androidTest {
            java.srcDir "androidTest"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += [
                "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api"
        ]
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.7"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
    flavorDimensions "store"
    productFlavors {
        pub {
            dimension "store"
            versionNameSuffix "_pub"
        }
        gplay {
            dimension "store"
            versionNameSuffix "_gplay"
            repositories {
                maven {
                    url "https://dl.bintray.com/qichuan/maven/"
                }
            }
        }
        fdroid {
            dimension "store"
            versionNameSuffix "_fdroid"
        }
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    namespace "org.breezyweather"
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
    }
}

configurations {
    cleanedAnnotations
    compile.exclude group: "org.jetbrains", module: "annotations"
}

kapt {
    correctErrorTypes true
}

dependencies {
    pubImplementation fileTree(include: ["*.jar"], dir: "libs")
    gplayImplementation fileTree(include: ["*.jar"], dir: "libs")

    // kotlin.
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // test.
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.3"
    testImplementation "androidx.test:core:1.5.0"
    testImplementation "androidx.test:runner:1.5.2"
    testImplementation "androidx.test:rules:1.5.0"
    testImplementation "org.mockito:mockito-core:4.11.0" // 5+ requires JDK 11

    // material design.
    implementation "com.google.android.material:material:1.9.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // compose.
    implementation "androidx.activity:activity-compose:1.7.2"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-util:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
    //androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    implementation "com.google.accompanist:accompanist-appcompat-theme:0.30.1"
    implementation "androidx.compose.material3:material3:1.1.1"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.navigation:navigation-compose:2.6.0"

    // preference.
    implementation "androidx.preference:preference-ktx:1.2.0"

    // work.
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.work:work-runtime:2.8.1"

    // lifecycle.
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
    //noinspection LifecycleAnnotationProcessorWithJava8
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.6.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.1"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.6.1"
    implementation "androidx.recyclerview:recyclerview:1.3.0"

    // multi dex.
    implementation "androidx.multidex:multidex:2.0.1"

    // hilt.
    implementation "com.google.dagger:hilt-android:2.46.1"
    kapt "com.google.dagger:hilt-android-compiler:2.46.1"
    annotationProcessor "com.google.dagger:hilt-compiler:2.46.1"

    implementation "androidx.hilt:hilt-work:1.0.0"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    annotationProcessor "androidx.hilt:hilt-compiler:1.0.0"

    // a map.
    pubImplementation "com.amap.api:location:6.3.0"

    // gms.
    pubImplementation "com.google.android.gms:play-services-location:21.0.1"
    gplayImplementation "com.google.android.gms:play-services-location:21.0.1"

    // coil
    implementation "io.coil-kt:coil:2.4.0"

    // HTTP
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava3:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.11.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.11.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1"

    // data store
    // implementation "androidx.datastore:datastore-preferences:1.0.0"

    // jwt
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly("io.jsonwebtoken:jjwt-orgjson:0.11.5") {
        exclude group: "org.json", module: "json" //provided by Android natively
    }

    // cm.
    implementation "org.cyanogenmod:platform.sdk:5.0"

    // rx java.
    implementation "io.reactivex.rxjava3:rxjava:3.1.6"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.2"

    // ui.
    implementation "com.github.papjul:BubbleSeekBar:v3.52"
    implementation "com.github.papjul:AdaptiveIconView:v0.0.3"
    implementation "androidx.activity:activity-ktx:1.7.2"
    implementation 'com.github.giangpham96.expandable-text:expandable_text_compose:2.0.0'

    // utils.
    implementation "com.xhinliang:LunarCalendar:4.0.7"

    // debugImplementation because LeakCanary should only run in debug builds.
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.11'
}